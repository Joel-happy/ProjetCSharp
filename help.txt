---------------------------------------------------------------------------------------------------------------------------
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---------------------------------------------------------------------------------------------------------------------------
// *** static async Task ...;
//
// DESCRIPTION :
//  ---> A static command is tied to the class itself and not to an instance of a class. That's why you don't need to create an instance
//  of a class to use a static method. 
// 
//  ---> Async signifies that it's an asynchrounous method. This means that the program can continue to work while waiting for a
//  particular async method to finish. An async method is able to use the keyword "await" which goes hand in hand.
//
//  async Task MyAsyncMethod()
//  {
//    await SomeAsyncOperation();
//  } 
//
//  This creates an async method that when called, will execute the function "SomeSyncOperation". The keyword "await" allows the
//  "MyAsyncMethod" to asynchrounously wait until "SomeSyncOperation" is complete.
//
//  ---> "Task" (or "Task<T>" (T represents the type)) indicates the result type. An asynchrounous method returns a "Task" which is 
//  the ongoing work of an asynchrounous method. If the method doesn't result anything, "Task" will be used, however, if a method 
//  that returns an int, "Task<int>" will be used.
---------------------------------------------------------------------------------------------------------------------------
|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
---------------------------------------------------------------------------------------------------------------------------